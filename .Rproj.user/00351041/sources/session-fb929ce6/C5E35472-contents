
for (i in 1:100){
  print (paste ("hoy es el dia numero", i, "en el que tú necesitas de ti mismo"))
}

# Ejemplo de iteracion de sobreescribir un vector

vector <- c(1:100)
vector
suma <- 0
for (i in vector) {
  suma <- suma + i
}
print(suma)

# hacer data frame con nombre y edades y color favorito.

datos <- data.frame(
  nombres = c ("Farel", "Santiago", "Miguel", "Andres", "Luis"),
  edades = c (22, 22, 21, 20, 20),
  color = c ("azul", "azul","verde", "negro", "azul")
)

for (contador in 1:dim(datos)[1]){
  print (paste("A", datos[contador,1], "le gusta el", datos[contador,3], "y tiene", datos[contador,2], "años"))
}


# ciclo while no usa intervalo definido de ciclos, sino que se rige por una condicional

x <- 1
while (x<5){
  x <- x + 1;
  print (x)
}

# Hacer la suma de los primeros numeros naturales hasta que la suma supere al 100.

x <- 1
y <- 1

while (y<100){
  print (y)
  y <- y + (x+1)
  x <- x+1
}

# Conteo en orden inverso de un mensaje que yo quiero

c <- 10
while (c >= 1){
  print(paste("Faltan", c, "dias para el examen de inmuno"))
  c <- c - 1
}

temp <- 5
while (temp > 0){
  print(paste("la temperatura es de", temp, "por lo que no te estas congelando"))
  sample (-1:5, 1) -> temp
}

# escusas
aleat <- function(datos){
c <- 10
while (c >= 1){
  cat(datos[(sample(1:dim(datos)[1],1)),1], datos[(sample(1:dim(datos)[1],1)),2], datos[(sample(1:dim(datos)[1],1)),3], "\n")
  c <- c - 1
}
}
aleat(escusas)

# fasta contar 

library (Biostrings)

readDNAStringSet("fasta_files/ecoli.fasta")-> seq
alphabetFrequency(seq)
a <- 1
numa <- 0
while (numa<1000){
  if (seq[[1]][a] == DNAString("A")){
    numa <- numa +1
  }
  a <- a+1
}
a
